### YamlMime:FAQ
metadata:
  title: Domande frequenti
  description: Domande frequenti per lo strumento devinit.
  ms.date: 08/28/2020
  ms.topic: reference
  author: andysterland
  ms.author: andster
  manager: jmartens
  ms.workload:
  - multiple
  monikerRange: '>= vs-2019'
  ms.prod: visual-studio-windows
  ms.technology: devinit
  ms.openlocfilehash: d3e662fed1f4df54498aed7ed957d070019b6fae
  ms.sourcegitcommit: 3c5b1a1d51b521356f42a6879c1f1745573dda65
  ms.translationtype: MT
  ms.contentlocale: it-IT
  ms.lasthandoff: 07/23/2021
  ms.locfileid: "114592777"
title: Domande frequenti su devinit
summary: >
  > [!IMPORTANT]

  > A partire dal 12 aprile 2021, la connessione GitHub Codespaces da Visual Studio 2019 non sarà più supportata e questa anteprima privata è stata conclusa. L'attenzione è incentrata sull'evoluzione delle esperienze per un ciclo interno basato sul cloud e soluzioni VDI ottimizzate per un'ampia gamma di Visual Studio di lavoro. Come parte di questo `devinit` e degli strumenti associati non saranno più disponibili. Si consiglia di partecipare al forum della community di sviluppatori per Visual Studio informazioni sulle anteprime future e informazioni sulla roadmap.
sections:
- name: Ignorato
  questions:
  - question: >
      Devinit è solo per GitHub Codespace?
    answer: >
      Per il momento, devinit è disponibile solo come parte della GitHub beta privata di Codespaces. Tuttavia, si prevede di includere devinit in una versione futura Visual Studio 2019.
  - question: >
      È solo Windows?
    answer: >
      Sì, devinit è incentrato sulla creazione di ambienti di sviluppo che funzionano per gli sviluppatori che usano Visual Studio, ovvero Windows. Stiamo considerando altre piattaforme, ma molte di esse hanno già soluzioni efficaci, quindi abbiamo voluto iniziare con Visual Studio e Windows.
  - question: >
      Non è disponibile alcuno strumento per la dipendenza necessaria.
    answer: >
      Siamo spiacenti. Se si fa parte della versione beta GitHub Codespaces, è possibile tornare a Microsoft tramite il canale di feedback per la versione beta privata. Se non si fa parte della versione beta privata, i commenti e i suggerimenti degli utenti sono ancora molto positivi e si può inviare un problema nella documentazione [di Visual Studio](https://github.com/MicrosoftDocs/visualstudio-docs/) con l'etichetta per richiedere supporto per lo strumento `devinit` necessario.
  - question: >
      Si è verificato un problema, come si esegue il debug?
    answer: >
      Se devinit ha esito negativo, la prima cosa da provare è il `--verbose / -v` flag per ottenere altre informazioni. È probabile che lo strumento sottostante in cui devinit sta chiamando si sia verificato un problema. Le informazioni dettagliate del log devono includere un indizio su dove cercare successivamente.
  - question: >
      Perché non solo uno script?
    answer: >
      La configurazione degli ambienti tramite uno script è una tecnica vecchia e può funzionare alla grande. Se funziona per l'utente, usarlo. devinit è un'altra opzione per gli sviluppatori per quando gli script non sono la scelta migliore.
  - question: >
      Perché non un contenitore?
    answer: >
      I contenitori e Docker sono ottimi strumenti per distribuire un ambiente tramite codice. Esistono alcuni motivi per cui i contenitori potrebbero non essere la soluzione ideale per l'utente:


      1. Se si vuole usare un ambiente Windows di sviluppo basato su desktop.

      1. Se si dispone già di un sistema operativo e si vuole semplicemente modificarlo anziché distribuire un nuovo ambiente.


      Per questi motivi devinit riguarda la personalizzazione Windows'ambiente attualmente disponibile.
  - question: >
      Che dire di altri strumenti di creazione di macchine virtuali (ad esempio, Terraform, Packer, Chef, Vagrant)
    answer: >
      Sono disponibili molti strumenti utili per creare immagini Windows e usarle. Tuttavia, non è stato possibile trovarne uno che soddisfa tutti gli scenari in cui si era in mente. Si vuole che devinit sia uno strumento per gli sviluppatori per personalizzare il proprio ambiente con tutto ciò che è necessario per un determinato repo e per avere un'ottima integrazione con Visual Studio, anziché essere uno strumento per creare immagini di macchine virtuali.
  - question: >
      E winget?
    answer: >
      devinit non è un gestore di pacchetti come winget e non si vuole che lo sia. Si vuole che sia possibile usare winget con devinit e si sta lavorando a uno strumento per questo scopo.
  - question: >
      Come vengono gestiti i riavvii?
    answer: >
      Se un'installazione devinit richiede un riavvio del sistema operativo, verrà restituito un messaggio di errore nella console. Sarà quindi necessario riavviare il sistema operativo in un momento adatto alle esigenze. Dopo il riavvio, potrebbe essere necessario eseguire nuovamente devinit se tutte le dipendenze non sono state installate.
  - question: >
      Uso di altri utenti
    answer: >-
      devinit si occupa di abilitare l'uso dell'ampio ecosistema disponibile per distribuire e configurare le dipendenze che l'app potrebbe avere. Sebbene devinit abbia un'opinione su ciò che offre, devinit riguarda principalmente l'abilitazione di altri strumenti da un file JSON dichiarativo.


      Oggi devinit è solo l'inizio e [l'elenco di strumenti](devinit-tool-list.md) è solo un inizio.
