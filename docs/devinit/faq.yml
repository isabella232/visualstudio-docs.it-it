### YamlMime:FAQ
metadata:
  title: Domande frequenti
  description: Domande frequenti per lo strumento devinit.
  ms.date: 08/28/2020
  ms.topic: reference
  author: andysterland
  ms.author: andster
  manager: jmartens
  ms.workload:
  - multiple
  monikerRange: '>= vs-2019'
  ms.prod: visual-studio-windows
  ms.technology: devinit
  ms.openlocfilehash: afe8ff8dcf4a9eacf1b1b476d3ca8f744a673422fc9945a1270cec1ef7240980
  ms.sourcegitcommit: c72b2f603e1eb3a4157f00926df2e263831ea472
  ms.translationtype: MT
  ms.contentlocale: it-IT
  ms.lasthandoff: 08/12/2021
  ms.locfileid: "121390719"
title: Domande frequenti su devinit
summary: >
  > [!IMPORTANT]

  > A partire dal 12 aprile 2021, la connessione a GitHub Codespaces da Visual Studio 2019 non sarà più supportata e questa anteprima privata è stata conclusa. L'attenzione è rivolta alle esperienze in continua evoluzione per un ciclo interno basato sul cloud e soluzioni VDI ottimizzate per un'ampia gamma di carichi di lavoro Visual Studio cloud. Nell'ambito di `devinit` questo e degli strumenti associati non saranno più disponibili. Si consiglia di partecipare al forum della community degli sviluppatori per Visual Studio informazioni sulle anteprime future e informazioni sulla roadmap.
sections:
- name: Ignorato
  questions:
  - question: >
      Devinit è solo per GitHub Codespace?
    answer: >
      Per il momento, devinit è disponibile solo come parte della GitHub beta privata di Codespaces. Tuttavia, è in programma l'inclusione di devinit in una versione futura Visual Studio 2019.
  - question: >
      È solo Windows?
    answer: >
      Sì, devinit è incentrato sulla creazione di ambienti di sviluppo che funzionano per gli sviluppatori che usano Visual Studio, il che significa Windows. Si stanno prendendo in considerazione altre piattaforme, ma molte di esse hanno già soluzioni efficaci, quindi si è voluto iniziare con Visual Studio e Windows.
  - question: >
      Non è disponibile alcuno strumento per la dipendenza necessaria.
    answer: >
      Siamo spiacenti. Se si fa parte della versione beta GitHub Codespaces, è possibile tornare a Microsoft tramite il canale di feedback per la versione beta privata. Se non si fa parte della versione beta privata, è comunque possibile inviare commenti e suggerimenti sugli elementi necessari ed è possibile inviare un problema nella documentazione [di Visual Studio](https://github.com/MicrosoftDocs/visualstudio-docs/) con l'etichetta per richiedere supporto per lo strumento `devinit` necessario.
  - question: >
      Si è verificato un problema, come si esegue il debug?
    answer: >
      Se devinit ha esito negativo, la prima cosa da provare è il `--verbose / -v` flag per ottenere altre informazioni. È probabile che lo strumento sottostante che devinit sta chiamando sta riscontrando un problema. Le informazioni dettagliate del log devono includere un indizio su dove cercare successivamente.
  - question: >
      Perché non è solo uno script?
    answer: >
      La configurazione degli ambienti tramite uno script è una tecnica vecchia e può funzionare in modo efficace. Se funziona per l'utente, usarlo. devinit è un'altra opzione per gli sviluppatori quando gli script non sono la scelta migliore.
  - question: >
      Perché non un contenitore?
    answer: >
      I contenitori e Docker sono ottimi strumenti per distribuire un ambiente tramite codice. Esistono alcuni motivi per cui i contenitori potrebbero non essere la soluzione ideale:


      1. Se si vuole usare un ambiente Windows di sviluppo basato su desktop.

      1. Se si ha già un sistema operativo e si vuole semplicemente modificarlo anziché distribuire un nuovo ambiente.


      Per questi motivi devinit riguarda la personalizzazione Windows'ambiente attualmente disponibile.
  - question: >
      Altre informazioni sugli altri strumenti di creazione di macchine virtuali (ad esempio, Terraform, Packer, Chef, Vagrant)
    answer: >
      Sono disponibili numerosi strumenti utili per creare immagini Windows ed è consigliabile usarle. Tuttavia, non è stato possibile trovarne uno che soddisfa tutti gli scenari in cui si era in mente. Si vuole che devinit sia uno strumento che consente agli sviluppatori di personalizzare il proprio ambiente con qualsiasi elemento necessario per un determinato repo e di avere un'ottima integrazione con Visual Studio, anziché essere uno strumento per creare immagini di macchine virtuali.
  - question: >
      E winget?
    answer: >
      devinit non è un gestore di pacchetti come winget e non è necessario che lo sia. Si vuole che tu sia in grado di usare winget con devinit e stiamo lavorando a uno strumento per questo scopo.
  - question: >
      Come vengono gestiti i riavvii?
    answer: >
      Se qualsiasi elemento installato da devinit richiede un riavvio del sistema operativo, nella console verrà visualizzato un messaggio di errore. Sarà quindi necessario riavviare il sistema operativo in un momento adatto alle esigenze. Dopo il riavvio, potrebbe essere necessario eseguire nuovamente devinit se tutte le dipendenze non sono state installate.
  - question: >
      Uso di altri utenti
    answer: >-
      devinit consente l'uso dell'ampio ecosistema disponibile per distribuire e configurare le dipendenze che l'app potrebbe avere. Anche se devinit ha un'opinione su ciò che offre, devinit riguarda principalmente l'abilitazione di altri strumenti da eseguire da un file JSON dichiarativo.


      Oggi devinit è solo l'inizio e [l'elenco degli strumenti](devinit-tool-list.md) è solo un inizio.
